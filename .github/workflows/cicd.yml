name: CI + CD

on:
  push:
    branches: [feature/github-environments]
jobs:
  Build:
    runs-on: ${{ matrix.os }}
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"

    strategy:
      matrix:
        node-version: [12]
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache # use this to check for `cache-hit` (`steps.node-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-modules-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          CI: true

      - name: Build dist
        run: npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: myartifact
          path: |
            dist

  DeployDev:
    name: Deploy to Dev
    # if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: 'https://dev.geekbites.move4mobile.io'
    steps:
      - name: Deploy
        run: echo I am deploying, ${{ env.url }}

  DeployStaging:
    name: Deploy to Staging
    # if: github.event.ref == 'refs/heads/main'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: 'https://staging.geekbites.move4mobile.io'
    steps:
      - uses: actions/download-artifact@master
        with:
          name: myartifact
          path: output

      - name: Deploy
        run: echo I am deploying

      - name: Check output
        run: ls -l -R

  DeployProduction:
    name: Deploy to Production
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'https://geekbites.move4mobile.io'
    steps:
      - name: Deploy
        run: echo I am deploying, ${{ env.url }}

name: Default Workflow

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]
  workflow_dispatch:
jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Use Node.js 12
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache # use this to check for `cache-hit` (`steps.node-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-12-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          CI: true

      - name: Build artifact
        run: npm run build

      - name: Check for broken links
        run: npm run check-broken-links:internal

      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: dist

  CreatePreview:
    name: Generate Preview URL
    if: github.event_name == 'pull_request'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Preview Channels
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}

  DeployDevelopment:
    name: Deploy to Development
    if: github.event.ref == 'refs/heads/develop'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: 'https://dev.geekbites.move4mobile.io'
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live

  DeployProduction:
    name: Deploy to Production
    needs: [CreateRelease]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'https://geekbites.move4mobile.io'
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live

  CreateRelease:
    name: Create Release
    if: "github.event.ref == 'refs/heads/main' && ! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false

      - uses: actions/download-artifact@master
        with:
          name: artifacts
          path: dist

      - name: Check cache
        uses: actions/cache@v2
        id: node-cache # use this to check for `cache-hit` (`steps.node-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ubuntu-latest-node-modules-12-${{ hashFiles('**/package-lock.json') }}

      - name: Install node modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
        env:
          CI: true

      - name: Prepare artifacts folder
        working-directory: ${{ github.workspace }}
        run: mkdir artifacts

      - name: Build artifact
        run: |
          zip -r ./artifacts/site ./dist/*

      - name: Semantic release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
